import re
import random
import ipaddress
from faker import Faker



fake = Faker()
def generate_log_entry():
    ip = fake.ipv4()
    user = fake.user_name()
    timestamp = fake.date_time_this_year()
    method = random.choice(["GET", "POST", "PUT", "DELETE"])
    resource = random.choice(["/login", "/admin", "/search?q=1' OR '1'='1", "/profile"])
    status = random.choice([200, 301, 403, 404, 500])
    user_agent = fake.user_agent()

    log_entry = f"{ip} - {user} [{timestamp}] \"{method} {resource} HTTP/1.1\" {status} \"{user_agent}\""
    return log_entry
def inject_attack_pattern(logs, num_attacks=5):
    attack_patterns = [
        "1' OR '1'='1",  # SQL Injection
        "<script>alert('XSS')</script>",  # XSS Attack
        "admin' --",  # SQL Injection
        "../../etc/passwd",  # Path Traversal
        "\" OR 1=1 --",  # Authentication Bypass
    ]

    for _ in range(num_attacks):
        log_entry = generate_log_entry()
        log_entry = log_entry.replace("/profile", random.choice(attack_patterns))
        logs.append(log_entry)

    return logs
def sanitize_logs(logs):
    sanitized_logs = []
    for log in logs:
        # Remove or mask IP addresses
        log = re.sub(r'\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b', "XXX.XXX.XXX.XXX", log)
        # Remove or mask usernames
        log = re.sub(r'\b[A-Za-z0-9._%+-]+\b(?= - )', "ANONYMIZED_USER", log)
        sanitized_logs.append(log)
    return sanitized_logs
generated_logs = [generate_log_entry() for _ in range(50)]
logs_with_attacks = inject_attack_pattern(generated_logs)
sanitized_logs = sanitize_logs(logs_with_attacks)
with open("sanitized_logs.txt", "w") as file:
    for log in sanitized_logs:
        file.write(log + "\n")
print("Sanitized logs saved to sanitized_logs.txt")
